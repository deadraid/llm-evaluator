[tool.poetry]
name = "llm-evaluator"
version = "0.1.0"
description = "Framework for evaluating LLM performance on various datasets"
authors = ["raidhon <raidhon@protonmail.com>"]
readme = "README.md"
packages = [{include = "llm_evaluator"}]

[tool.poetry.dependencies]
python = "^3.10"
datasets = "3.2.0"
openai = "1.57.2"
numpy = "2.2.0"
tqdm = "4.67.1"
huggingface-hub = "0.26.5"
python-dotenv = "1.0.1"

[tool.poetry.group.dev.dependencies]
ruff = "0.8.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Enable pycodestyle ('E'), pyflakes ('F'), and isort ('I') rules
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
line-length = 100

# Exclude files and directories
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist"
]

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports in __init__.py files

[tool.ruff.isort]
known-first-party = ["llm_evaluator"]
combine-as-imports = true
